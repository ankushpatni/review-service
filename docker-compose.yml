version: '3.8'

services:
  review-service-blue:
    build: .
    container_name: review-service-blue
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/reviewdb
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=review-data-bucket
      - AWS_S3_PREFIX=reviews/
      - AWS_ENDPOINT_OVERRIDE=http://review-service-localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_PATH_STYLE_ACCESS=true
      - REVIEW_PROCESSING_CRON=0 */5 * * * * # every 2 minutes
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - localstack
      - kafka
    networks:
      - review-network

  review-service-green:
    build: .
    container_name: review-service-green
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/reviewdb
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=review-data-bucket
      - AWS_S3_PREFIX=reviews/
      - AWS_ENDPOINT_OVERRIDE=http://review-service-localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_PATH_STYLE_ACCESS=true
      - REVIEW_PROCESSING_CRON=0 */1 * * * * # every 2 minutes
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - localstack
      - kafka
    networks:
      - review-network

  postgres:
    image: postgres:14-alpine
    container_name: review-service-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=reviewdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - review-network

  localstack:
    image: localstack/localstack:latest
    container_name: review-service-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
    volumes:
      - ./localstack:/docker-entrypoint-initaws.d
      - localstack-data:/var/lib/localstack
    networks:
      - review-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    networks:
      - review-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - review-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - review-network

  nginx:
    image: nginx:alpine
    container_name: review-service-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - review-service-blue
      - review-service-green
    networks:
      - review-network

volumes:
  postgres-data:
  localstack-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data:

networks:
  review-network:
    driver: bridge 